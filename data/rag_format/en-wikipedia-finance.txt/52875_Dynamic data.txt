Dynamic data


# Dynamic data



In data management, **dynamic data** or **transactional data** is information that is periodically updated, meaning it changes asynchronously over time as new information becomes available. The concept is important in data management,ᶜⁱᵗᵃᵗⁱᵒⁿ ⁿᵉᵉᵈᵉᵈ since the time scale of the data determines how it is processed and stored.

Data that is not dynamic is considered either static (unchanging) or persistent, which is data that is infrequently accessed and not likely to be modified. Dynamic data is also different from streaming data, which is a constant flow of information. Dynamic data may be updated at any time, with periods of inactivity in between.


## Examples

In enterprise data management, dynamic data is likely to be transactional, but it is not limited to financial or business transactions. It may also include engineering transactions, such as a revised schematic diagram or architectural document. In this context static data is either unchanged or so rarely changed that it can be stored remotely ("basement" or far) storage, whereas dynamic data is reused or changed frequently and therefore requires online ("office" or near) storage. An original copy of a wiring schematic will change from dynamic to static as the new versions make it obsolete. It is still possible to reuse the original, but in the normal course of business there is rarely a need to access obsoleted data. The current version of the wiring schematic is considered dynamic or changeable.

These two different contexts for "dynamic" are similar, but differ their time scale. Dynamic data can become static.

Persistent data is or is likely to be in the context of the execution of a program. Static data is in the context of the business historical data, regardless of any one application or program. The "dynamic" data is the new/updated/revised/deleted data in both cases, but again over different time horizons. Your paycheck stub is dynamic data for 1 week, or 1 day, then it becomes read-only and read-rarely, which would be *either* or *both* static and persistent.

