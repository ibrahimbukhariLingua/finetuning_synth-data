Software-defined data center


# Software-defined data center



**Software-defined data center** (**SDDC**; also: virtual data center, VDC) is a marketing term that extends virtualization concepts such as abstraction, pooling, and automation to all data center resources and services to achieve IT as a service (ITaaS).
In a software-defined data center, "all elements of the infrastructure — networking, storage, CPU and security – are virtualized and delivered as a service."

SDDC support can be claimed by a wide variety of approaches. Critics see the software-defined data center as a marketing tool and "software-defined hype," noting this variability.

In 2013, analysts were divided into three different groups, those who think it is "just another software-defined hype", those who think most of the components are already available and those who see a potential future market. There was no unified agreement about the direction of SDDC. For some areas like the software-defined networking a market value of about US$3.7 billion by 2016 was expected, compared to US$360 million in 2013. (software-defined networking was expected to reach US$18.5 billion in 2022) IDC estimates that the software-defined storage market is poised to expand faster than any other storage market.


## Description and core components

The software-defined data center encompasses a variety of concepts and data-center infrastructure components, with each component potentially provisioned, operated, and managed through an application programming interface (API). Core architectural components that comprise the software-defined data center include the following:

* computer virtualization, - a software implementation of a computer
* software-defined networking (SDN), which includes network virtualization - the process of merging hardware and software resources and networking functionality into a software-based virtual network
* software-defined storage (SDS), which includes storage virtualization, suggests a service interface to provision capacity and SLAs (Service Level Agreements) for storage, including performance and durability
* management and automation software, enabling an administrator to provision, control, and manage all software-defined data-center components

A software-defined data center differs from a private cloud, since a private cloud only has to offer virtual-machine self-service, beneath which it could use traditional provisioning and management. Instead, SDDC concepts imagine a data center that can encompass private, public, and hybrid clouds.


## Origins and development

Data centers traditionally lacked the capacity to accommodate total virtualization. By 2013, companies began laying the foundation for software-defined data centers with virtualization. Ben Cherian of Midokura considered Amazon Web Services as a catalyst for the move toward software-defined data centers because it "convinced the world that the data center could be abstracted into much smaller units and could be treated as disposable pieces of technology, which in turn could be priced as a utility."


## Potential impact

In 2013, the software-defined data center term was promoted as a paradigm shift. According to Steve Herrod, the promise of the software-defined data center was that companies would no longer need to rely on specialized hardware or hire consultants to install and program hardware in its specialized language. Rather, IT would define applications and all of the resources they require—including compute, storage, networking, security, and availability—and group all of the required components to create a “logical application.”

Commonly cited benefits of software-defined data centers include improved efficiency from extending virtualization throughout the data center; increased agility from provisioning applications quickly; improved control over application availability and security through policy-based governance; and the flexibility to run new and existing applications in multiple platforms and clouds.

In addition, a software-defined data center implementation could reduce a company's energy usage by enabling servers and other data center hardware to run at decreased power levels or be turned off. Some believe that software-defined data centers improve security by giving organizations more control over their hosted data and security levels, compared to security provided by hosted-cloud providers.

The software-defined data center was marketed to drive down prices for data center hardware and challenge traditional hardware vendors to develop new ways to differentiate their products through software and services.


## Challenges

The concepts of software-defined in general, and software-defined data centers in particular, have been dismissed by some as “nonsense,” “marketecture,” and “software-defined hype.” Some critics believe that only a minority of companies with “completely homogeneous IT systems’” already in place, such as Yahoo! and Google, can transition to software-defined data centers.

According to some observers, software-defined data centers won’t necessarily eliminate challenges that relate to handling the differences between development and production environments; managing a mix of legacy and new applications; or delivering service-level agreements (SLAs).

Software-defined networking was seen as essential to the software-defined data center, but it is also considered to be the “least mature technology” required to enable the software-defined data center. However, several companies, including Arista Networks, Cisco, Microsoft and VMware, market products to enable virtual networks that are provisioned, extended, and moved across existing physical networks.

Several competing network virtualization standards already existed by 2012. Neutron, the networking component of the open-source software OpenStack project, provides an application-level abstraction of network resources and includes an interface for configuring virtual switches.

The software-defined data center approach will force IT organizations to adapt. Software-defined environments require rethinking many IT processes—including automation, metering, and billing—and executing service delivery, service activation, and service assurance.
A widespread transition to the SDDC could take years.

