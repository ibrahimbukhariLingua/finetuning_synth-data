Enterprise unified process


# Enterprise unified process



The **Enterprise Unified Process** (**EUP**) is an extended variant of the Unified Process and was developed by Scott W. Ambler and Larry Constantine in 2000, eventually reworked in 2005 by Ambler, John Nalbone and Michael Vizdos. EUP was originally introduced to overcome some shortages of RUP, namely the lack of production and eventual retirement of a software system. So two phases and several new disciplines were added. EUP sees software development not as a standalone activity, but embedded in the lifecycle of the system (to be built or enhanced or replaced), the IT lifecycle of the enterprise and the organization/business lifecycle of the enterprise itself. It deals with software development as seen from the customer's point of view.

In 2013 work began to evolve EUP to be based on Disciplined Agile Delivery instead of the Unified Process.


## Phases

The Unified Process defines four project phases

* Inception
* Elaboration
* Construction
* Transition

To these EUP adds two additional phases

* Production
* Retirement

## Disciplines

The Rational Unified Process defines nine project disciplines

* Business Modeling
* Requirements
* Analysis and Design
* Implementation
* Test
* Deployment
* Configuration and Change Management
* Project Management
* Environment

To these EUP adds one additional project discipline

* Operations and Support

and seven enterprise disciplines

* Enterprise Business Modeling
* Portfolio Management
* Enterprise Architecture
* Strategic Reuse
* People Management
* Enterprise Administration
* Software Process Improvement

## Best Practices of EUP

The EUP provide following best practices:-

1. Develop iteratively
2. Manage requirements
3. Proven architecture
4. Modeling
5. Continuously verify quality.
6. Manage change
7. Collaborative development
8. Look beyond development.
9. Deliver working software on a regular basis
10. Manage risk
