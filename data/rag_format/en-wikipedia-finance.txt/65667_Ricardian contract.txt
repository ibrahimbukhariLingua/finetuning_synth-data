Ricardian contract


# Ricardian contract



The **Ricardian contract**, as invented by Ian Grigg in 1996, is a method of recording a document as a contract at law, and linking it securely to other systems, such as accounting, for the contract as an issuance of value.ᵇᵉᵗᵗᵉʳˢᵒᵘʳᶜᵉⁿᵉᵉᵈᵉᵈ It is robust through use of identification by cryptographic hash function, transparent through use of readable text for legal prose and efficient through markup language to extract essential information.

A Ricardian contract places the defining elements of a legal agreement in a format that can be expressed and executed in software.

The method arises out of the work of Ian Grigg completed in the mid-1990s in contributions to Ricardo,ᵇᵉᵗᵗᵉʳˢᵒᵘʳᶜᵉⁿᵉᵉᵈᵉᵈ a system of assets transfers that was built in 1995-1996 by Systemics and included the pattern.


## Definition

> A Ricardian contract can be defined as a single document that is
> 
> 1. a contract offered by an issuer to holders,
> 2. for a valuable right held by holders, and managed by the issuer,
> 3. easily readable (like a contract on paper),
> 4. readable by programs (parsable like a database),
> 5. digitally signed,
> 6. carrying the keys and server information, and
> 7. allied with a unique and secure identifier


## Diagram

The Ricardian contract separates the agreement of parties across time and domain. On the left of the "Bowtie" representation,ᶜˡᵃʳⁱᶠⁱᶜᵃᵗⁱᵒⁿ ⁿᵉᵉᵈᵉᵈ the negotiation and formation of a legally binding contract leads to a single parent document that defines all of the intent of that agreement. On the right, the performance of that agreement might involve many transactions to be accounted for, logically separated from the meaning of the issue.ᶜⁱᵗᵃᵗⁱᵒⁿ ⁿᵉᵉᵈᵉᵈ The join between the legal world and the accounting world is formed by the hash — each transaction locks in the terms and conditions of the precise deal of the parties by including the hash of the contract in every relevant transaction record, yet the operation of the transactions and the issuance of the contract are cleanly separated and thus perverse incentives are eliminated.


## Legal relationship

The role of the Ricardian contract is to capture the contractual relationship between contracting parties to assist later performance of that contract by programs.ᶜⁱᵗᵃᵗⁱᵒⁿ ⁿᵉᵉᵈᵉᵈ In its contractual form, it is the recording of an offer from an issuer to a holder. The offer is signed digitally within the format by the offerer, typically using a plaintext digital signature such as provided by OpenPGP.

The acceptance of the contract is typically formed by signing/agreeing to a transaction that refers to the hash of that contract. Within the context of a high-performance payment system, a secure payment will cite the hash of the contract of the instrument being paid, as well as paying and payee parties and a quantity of units. In a smart contracts system, the acceptance would be performed by operating the contract's code to move the state of the agreement forward.


## Relationship to smart contracts

Smart contracts, as defined in the work of Nick Szabo are an abstract concept relating to the automated performance of an already agreed contract, whereas the Ricardian contract is a design pattern to capture the intent of the agreement of the parties, before its performance.ᶜⁱᵗᵃᵗⁱᵒⁿ ⁿᵉᵉᵈᵉᵈ

By means of hashes within as references or links to external documents, above, the Ricardian contract form easily extends to refer to code.ᵇᵉᵗᵗᵉʳˢᵒᵘʳᶜᵉⁿᵉᵉᵈᵉᵈ The explicit referral to the code can pass legitimacy from overarching legal prose to the code, thus implementing the concept of the smart contract.

Refactoring to describe blockchains and to integrate references to smart contract logic created a hybrid version of the Ricardian contract. This form proposes a tuple of {prose, parameters, code} where the parameters can particularise or specialise the legal prose and the computer code in order to create a single deal out of a template or library of components. Also known as a Ricardian triple, it can describe blockchains, smart contracts, IoT devices and persons.

